# Generated by Django 5.1.1 on 2025-05-30 07:49

import django.db.models.deletion
import django_extensions.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_alter_categorymembership_category_bowtype_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoringSheet',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: not required, max-64', max_length=64, verbose_name='scoringsheet name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('dimension', models.CharField(blank=True, choices=[('10x3', '10x3'), ('5x5', '5x5')], default='10x3', help_text='format: required, max-5', max_length=5, null=True, verbose_name='dimension of scoringsheet')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='scoringsheet information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='scoringsheet_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Scoring Sheet',
                'verbose_name_plural': 'Scoring Sheets',
            },
        ),
        migrations.CreateModel(
            name='TargetFace',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='targetface name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('diameter', models.CharField(choices=[('40 cm', '40 cm'), ('60 cm', '60 cm'), ('80 cm', '80 cm'), ('122 cm', '122 cm')], default='40', help_text='format: required, max-32', max_length=32, verbose_name='diameter of targetface')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='targetface information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='targetface_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Target Face',
                'verbose_name_plural': 'Target Faces',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.PositiveSmallIntegerField(default=0, help_text='format: not required', verbose_name='nr of points shot')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='amount')),
                ('arrows', models.PositiveSmallIntegerField(default=0, help_text='format: not required', verbose_name='nr of arrows shot')),
                ('distance', models.PositiveSmallIntegerField(default=0, help_text='format: not required', verbose_name='shooting distance in meters')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='result information')),
                ('archer', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='result_archer', to='api.archer', verbose_name='archer who shot the score')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='result_author', to=settings.AUTH_USER_MODEL)),
                ('contest', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='result_contest', to='api.contest', verbose_name='contest of the score')),
                ('scoringsheet', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='result_scoringsheet', to='api.scoringsheet', verbose_name='scoringsheet used')),
                ('targetface', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='result_targetface', to='api.targetface', verbose_name='targetface used')),
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
            },
        ),
    ]
