# Generated by Django 5.1.1 on 2025-06-03 12:18

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0027_alter_archer_info'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArrowType',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='arrow type name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='arrow type information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='arrowtype_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arrow Type',
                'verbose_name_plural': 'Arrow Types',
            },
        ),
        migrations.CreateModel(
            name='ArrowTypeMembership',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('arrow', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='arrowtypememberships', to='api.arrow', verbose_name='arrowtypemembership arrow')),
                ('arrowtype', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='arrowtypemembership_arrowtype', to='api.arrowtype', verbose_name='arrowtypemembership arrowtype')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='arrowtypemembership_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arrow Type Membership',
                'verbose_name_plural': 'Arrow Type Memberships',
            },
        ),
        migrations.CreateModel(
            name='BestOfClub',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveIntegerField(help_text='format: required', verbose_name='bestofclub points')),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bestofclubs', to='api.archer', verbose_name='bestofclub archer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BowSight',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='bow sight name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='bowsight information')),
                ('sight_type', models.CharField(blank=True, choices=[('fixed_pin', 'Fixed Pin'), ('adjustable', 'Adjustable'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowsight type')),
                ('color', models.CharField(blank=True, choices=[('black', 'Black'), ('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowsight color')),
                ('material', models.CharField(blank=True, choices=[('aluminum', 'Aluminum'), ('carbon', 'Carbon'), ('plastic', 'Plastic'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowsight material')),
                ('length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowsight length in inches')),
                ('weight', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowsight weight in grams')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='bowsight_author', to=settings.AUTH_USER_MODEL)),
                ('bowtype', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bowsights', to='api.bowtype', verbose_name='bowsight bowtype')),
            ],
            options={
                'verbose_name': 'Bow Sight',
                'verbose_name_plural': 'Bow Sights',
            },
        ),
        migrations.CreateModel(
            name='BowSightArcher',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bowsightarcher_archer', to='api.archer', verbose_name='bowsightarcher archer')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='bowsightarcher_author', to=settings.AUTH_USER_MODEL)),
                ('bowsight', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bowsightarchers', to='api.bowsight', verbose_name='bowsightarcher bowsight')),
            ],
            options={
                'verbose_name': 'Bow Sight Archer',
                'verbose_name_plural': 'Bow Sight Archers',
            },
        ),
        migrations.CreateModel(
            name='ClubChampionship',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='club championship name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='club championship information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionship_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Club Championship',
                'verbose_name_plural': 'Club Championships',
            },
        ),
        migrations.CreateModel(
            name='ClubChampionshipMembership',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionshipmembership_archer', to='api.archer', verbose_name='clubchampionshipmembership archer')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionshipmembership_author', to=settings.AUTH_USER_MODEL)),
                ('clubchampionship', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionshipmemberships', to='api.clubchampionship', verbose_name='clubchampionshipmembership clubchampionship')),
            ],
            options={
                'verbose_name': 'Club Championship Membership',
                'verbose_name_plural': 'Club Championship Memberships',
            },
        ),
        migrations.CreateModel(
            name='ClubChampionshipScore',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveIntegerField(help_text='format: required', verbose_name='clubchampionshipscore points')),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionshipscore_archer', to='api.archer', verbose_name='clubchampionshipscore archer')),
                ('clubchampionship', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='clubchampionshipscores', to='api.clubchampionship', verbose_name='clubchampionshipscore clubchampionship')),
            ],
            options={
                'verbose_name': 'Club Championship Score',
                'verbose_name_plural': 'Club Championship Scores',
            },
        ),
        migrations.CreateModel(
            name='CompetitionScore',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveIntegerField(help_text='format: required', verbose_name='competitionscore points')),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='competitionscore_archer', to='api.archer', verbose_name='competitionscore archer')),
                ('competition', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='competitionscores', to='api.competition', verbose_name='competitionscore competition')),
            ],
            options={
                'verbose_name': 'Competition Score',
                'verbose_name_plural': 'Competition Scores',
            },
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='distance name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='distance information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='distance_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Distance',
                'verbose_name_plural': 'Distances',
            },
        ),
        migrations.CreateModel(
            name='PersonalBest',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveIntegerField(help_text='format: required', verbose_name='personalbest points')),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='personalbests', to='api.archer', verbose_name='personalbest archer')),
                ('competition', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='personalbest_competition', to='api.competition', verbose_name='personalbest competition')),
            ],
            options={
                'verbose_name': 'Personal Best',
                'verbose_name_plural': 'Personal Bests',
            },
        ),
        migrations.CreateModel(
            name='PersonalBestMembership',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='personalbestmembership_archer', to='api.archer', verbose_name='personalbestmembership archer')),
                ('personalbest', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='personalbestmemberships', to='api.personalbest', verbose_name='personalbestmembership personalbest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Range',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='range name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='range information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='range_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Range',
                'verbose_name_plural': 'Ranges',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='round name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('distance', models.PositiveIntegerField(help_text='format: required', verbose_name='round distance in meters')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='round information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='round_author', to=settings.AUTH_USER_MODEL)),
                ('targetface', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='rounds', to='api.targetface', verbose_name='round targetface')),
            ],
            options={
                'verbose_name': 'Round',
                'verbose_name_plural': 'Rounds',
            },
        ),
        migrations.CreateModel(
            name='RangeRound',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='rangeround_author', to=settings.AUTH_USER_MODEL)),
                ('range', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='rangerounds', to='api.range', verbose_name='rangeround range')),
                ('round', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='rangeround_round', to='api.round', verbose_name='rangeround round')),
            ],
            options={
                'verbose_name': 'Range Round',
                'verbose_name_plural': 'Range Rounds',
            },
        ),
        migrations.CreateModel(
            name='RoundDistance',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='rounddistance_author', to=settings.AUTH_USER_MODEL)),
                ('distance', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='rounddistance_distance', to='api.distance', verbose_name='rounddistance distance')),
                ('round', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='rounddistances', to='api.round', verbose_name='rounddistance round')),
            ],
            options={
                'verbose_name': 'Round Distance',
                'verbose_name_plural': 'Round Distances',
            },
        ),
        migrations.CreateModel(
            name='RoundMembership',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='roundmembership_archer', to='api.archer', verbose_name='roundmembership archer')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='roundmembership_author', to=settings.AUTH_USER_MODEL)),
                ('round', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='roundmemberships', to='api.round', verbose_name='roundmembership round')),
            ],
            options={
                'verbose_name': 'Round Membership',
                'verbose_name_plural': 'Round Memberships',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveIntegerField(help_text='format: required', verbose_name='score points')),
                ('arrows', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='archerscore arrows')),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='scores', to='api.archer', verbose_name='score archer')),
                ('round', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='scores', to='api.round', verbose_name='score round')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
            },
        ),
        migrations.CreateModel(
            name='ScoreMembership',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='scoremembership_archer', to='api.archer', verbose_name='scoremembership archer')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='scoremembership_author', to=settings.AUTH_USER_MODEL)),
                ('score', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='scorememberships', to='api.score', verbose_name='scoremembership score')),
            ],
            options={
                'verbose_name': 'Score Membership',
                'verbose_name_plural': 'Score Memberships',
            },
        ),
    ]
