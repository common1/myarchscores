# Generated by Django 5.1.1 on 2025-05-07 13:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Archer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='last name of archer')),
                ('first_name', models.CharField(help_text='format: required, max-32', max_length=32, verbose_name='first name of archer')),
                ('middle_name', models.CharField(blank=True, help_text='format: not required, max-6', max_length=6, null=True, verbose_name='middle name of archer')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='last_name')),
                ('union_number', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='union number of archer')),
                ('info', models.TextField(blank=True, help_text='format: notrequired', null=True, verbose_name='archer information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='archer_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Archer',
                'verbose_name_plural': 'Archers',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='club name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('town', models.CharField(blank=True, help_text='format: not required, max-64', max_length=64, null=True, verbose_name='town name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='club information')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='author_club', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubs',
            },
        ),
        migrations.CreateModel(
            name='ClubMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archer', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='clubmember_archer', to='api.archer', verbose_name='archer who is member')),
                ('club', models.ForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='clubmember_club', to='api.club', verbose_name='club of the member')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='club',
            name='archers',
            field=models.ManyToManyField(blank=True, help_text='format: not required', related_name='club_archers', through='api.ClubMember', to='api.archer'),
        ),
    ]
