# Generated by Django 5.1.1 on 2025-06-02 09:47

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0023_bowstring'),
    ]

    operations = [
        migrations.CreateModel(
            name='Arrow',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='arrow name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='arrow information')),
                ('length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='arrow length in inches')),
                ('diameter', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='arrow diameter in mm')),
                ('spine', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='arrow spine')),
                ('weight', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='arrow weight in grains')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='arrow_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arrow',
                'verbose_name_plural': 'Arrows',
            },
        ),
        migrations.CreateModel(
            name='BowLimb',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='bowlimb name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb information')),
                ('length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb length in inches')),
                ('color', models.CharField(blank=True, choices=[('black', 'Black'), ('brown', 'Brown'), ('white', 'White'), ('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowlimb color')),
                ('material', models.CharField(blank=True, choices=[('wood', 'Wood'), ('carbon', 'Carbon'), ('aluminum', 'Aluminum'), ('fiberglass', 'Fiberglass'), ('composite', 'Composite'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowlimb material')),
                ('tension', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb tension in pounds')),
                ('draw_weight', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb draw weight in pounds')),
                ('draw_weight_range', models.CharField(blank=True, choices=[('20-30 lbs', '20-30 lbs'), ('30-40 lbs', '30-40 lbs'), ('40-50 lbs', '40-50 lbs'), ('50-60 lbs', '50-60 lbs'), ('60+ lbs', '60+ lbs'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowlimb draw weight range')),
                ('draw_length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb draw length in inches')),
                ('draw_length_range', models.CharField(blank=True, choices=[('24-26 inches', '24-26 inches'), ('26-28 inches', '26-28 inches'), ('28-30 inches', '28-30 inches'), ('30+ inches', '30+ inches'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowlimb draw length range')),
                ('limb_type', models.CharField(blank=True, choices=[('top', 'Top Limb'), ('bottom', 'Bottom Limb'), ('other', 'Other')], help_text='format: not required, max-16', max_length=16, null=True, verbose_name='bowlimb type')),
                ('limb_weight', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowlimb weight in pounds')),
                ('limb_weight_range', models.CharField(blank=True, choices=[('1-2 lbs', '1-2 lbs'), ('2-3 lbs', '2-3 lbs'), ('3-4 lbs', '3-4 lbs'), ('4+ lbs', '4+ lbs'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowlimb weight range')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='bowlimb_author', to=settings.AUTH_USER_MODEL)),
                ('bowtype', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bowlimbs', to='api.bowtype', verbose_name='bowlimb bowtype')),
            ],
            options={
                'verbose_name': 'Bow Limb',
                'verbose_name_plural': 'Bow Limbs',
            },
        ),
        migrations.CreateModel(
            name='BowRiser',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='bowriser name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='bowriser information')),
                ('length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='bowriser length in inches')),
                ('color', models.CharField(blank=True, choices=[('black', 'Black'), ('brown', 'Brown'), ('white', 'White'), ('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowriser color')),
                ('material', models.CharField(blank=True, choices=[('wood', 'Wood'), ('carbon', 'Carbon'), ('aluminum', 'Aluminum'), ('fiberglass', 'Fiberglass'), ('composite', 'Composite'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='bowriser material')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='bowriser_author', to=settings.AUTH_USER_MODEL)),
                ('bowtype', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='bowrisers', to='api.bowtype', verbose_name='bowriser bowtype')),
            ],
            options={
                'verbose_name': 'Bow Riser',
                'verbose_name_plural': 'Bow Risers',
            },
        ),
        migrations.CreateModel(
            name='Fletching',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='format: required, max-64', max_length=64, verbose_name='fletching name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('info', models.TextField(blank=True, help_text='format: not required', null=True, verbose_name='fletching information')),
                ('color', models.CharField(blank=True, choices=[('black', 'Black'), ('brown', 'Brown'), ('white', 'White'), ('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='fletching color')),
                ('material', models.CharField(blank=True, choices=[('feather', 'Feather'), ('plastic', 'Plastic'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='fletching material')),
                ('length', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching length in inches')),
                ('width', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching width in inches')),
                ('height', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching height in inches')),
                ('weight', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching weight in grains')),
                ('thickness', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching thickness in mm')),
                ('position', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching position in inches')),
                ('orientation', models.CharField(blank=True, choices=[('right', 'Right Wing'), ('left', 'Left Wing'), ('straight', 'Straight'), ('other', 'Other')], help_text='format: not required, max-16', max_length=16, null=True, verbose_name='fletching orientation')),
                ('angle', models.PositiveIntegerField(blank=True, help_text='format: not required', null=True, verbose_name='fletching angle in degrees')),
                ('fletching_type', models.CharField(blank=True, choices=[('shield', 'Shield'), ('parabolic', 'Parabolic'), ('banana', 'Banana'), ('other', 'Other')], help_text='format: not required, max-32', max_length=32, null=True, verbose_name='fletching type')),
                ('arrow', models.ManyToManyField(blank=True, help_text='format: not required', related_name='fletchings', to='api.arrow')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='fletching_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fletching',
                'verbose_name_plural': 'Fletchings',
            },
        ),
        migrations.CreateModel(
            name='ArrowFletching',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('arrow', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='arrowfletchings', to='api.arrow', verbose_name='arrowfletching arrow')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='arrowfletching_author', to=settings.AUTH_USER_MODEL)),
                ('fletching', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='arrowfletching_fletching', to='api.fletching', verbose_name='arrowfletching fletching')),
            ],
            options={
                'verbose_name': 'Arrow Fletching',
                'verbose_name_plural': 'Arrow Fletchings',
            },
        ),
    ]
